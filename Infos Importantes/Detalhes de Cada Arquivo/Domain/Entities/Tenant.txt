=========================================================
TENANT.CS - DOCUMENTAÇÃO TÉCNICA
=========================================================

VISÃO GERAL:
-----------
Entidade central do sistema multi-tenant representando inquilinos/organizações.
Implementa gestão completa de tenants com configurações, assinaturas e recursos.
Controla isolamento de dados, permissões e limites por organização.

LOCALIZAÇÃO:
-----------
📁 AuthTenant.Domain/Entities/Tenant.cs

DEPENDÊNCIAS:
------------
✅ BaseEntity - Herança de funcionalidades base
✅ System.ComponentModel.DataAnnotations - Validações de dados
✅ System.ComponentModel.DataAnnotations.Schema - Mapeamento de banco
✅ BusinessRuleException - Exceções de regras de negócio
✅ ApplicationUser - Navegação para usuários

RESPONSABILIDADES:
-----------------
🔸 Gestão completa de inquilinos e organizações
🔸 Controle de configurações e limites por tenant
🔸 Gerenciamento de assinaturas e billing
🔸 Isolamento e segurança de dados
🔸 Customização de interface e branding
🔸 Analytics e métricas por organização

PROPRIEDADES PRINCIPAIS:
-----------------------

1. INFORMAÇÕES BÁSICAS:
   ✅ Name (string) - Nome da organização (obrigatório)
   ✅ DisplayName (string?) - Nome de exibição customizado
   ✅ Description (string?) - Descrição da organização
   ✅ Website (string?) - Site oficial da organização
   ✅ Validação de formato e comprimento

2. CONFIGURAÇÕES DE ASSINATURA:
   ✅ SubscriptionPlan (string) - Plano de assinatura atual
   ✅ SubscriptionStatus (string) - Status da assinatura
   ✅ SubscriptionStartDate (DateTime?) - Início da assinatura
   ✅ SubscriptionEndDate (DateTime?) - Fim da assinatura
   ✅ BillingEmail (string?) - Email para cobrança
   ✅ Controle de acesso baseado em plano

3. LIMITES E RECURSOS:
   ✅ MaxUsers (int) - Limite máximo de usuários
   ✅ MaxStorage (long) - Limite de armazenamento (bytes)
   ✅ MaxProducts (int) - Limite de produtos no catálogo
   ✅ MaxApiCalls (int) - Limite de chamadas API por período
   ✅ Controle de usage e billing

4. USAGE E ANALYTICS:
   ✅ CurrentUsers (int) - Usuários ativos atuais
   ✅ CurrentStorage (long) - Armazenamento usado (bytes)
   ✅ CurrentProducts (int) - Produtos cadastrados
   ✅ CurrentApiCalls (int) - Chamadas API no período
   ✅ Métricas em tempo real

5. CUSTOMIZAÇÃO E BRANDING:
   ✅ LogoUrl (string?) - URL do logo da organização
   ✅ PrimaryColor (string?) - Cor primária do tema
   ✅ SecondaryColor (string?) - Cor secundária do tema
   ✅ CustomDomain (string?) - Domínio personalizado
   ✅ Personalização de interface

6. CONFIGURAÇÕES REGIONAIS:
   ✅ TimeZone (string?) - Fuso horário padrão
   ✅ Language (string?) - Idioma padrão
   ✅ Currency (string?) - Moeda para billing
   ✅ DateFormat (string?) - Formato de data preferido
   ✅ Localização por região

7. CONFIGURAÇÕES TÉCNICAS:
   ✅ DatabaseConnectionString (string?) - String de conexão específica
   ✅ ApiKey (string?) - Chave API única do tenant
   ✅ EncryptionKey (string?) - Chave de criptografia
   ✅ CustomSettings (string?) - Configurações JSON personalizadas
   ✅ Isolamento e segurança

PROPRIEDADES COMPUTADAS:
------------------------

🔧 EffectiveDisplayName
   - Nome de exibição com fallback para Name
   - Garantia de valor não-nulo para interfaces
   - Priorização de DisplayName customizado

🔧 IsSubscriptionActive
   - Status ativo considerando data de expiração
   - Validação de período de assinatura
   - Base para controle de acesso

🔧 IsTrialPeriod
   - Identifica se está em período trial
   - Baseado em plano e datas de assinatura
   - Controle de funcionalidades limitadas

🔧 SubscriptionDaysRemaining
   - Dias restantes da assinatura
   - Alertas de renovação antecipada
   - Null se assinatura sem data de fim

🔧 IsNearLimit (Users, Storage, Products, ApiCalls)
   - Alertas de aproximação de limites
   - Threshold configurável (80% por padrão)
   - Prevenção de bloqueios inesperados

🔧 UsagePercentage (Users, Storage, Products, ApiCalls)
   - Percentual de uso de cada recurso
   - Métricas para dashboards
   - Base para billing e alerts

🔧 Status
   - Status geral do tenant considerando múltiplos fatores
   - Estados: Active, Inactive, Suspended, Trial, Expired
   - Lógica centralizada de acesso

MÉTODOS DE DOMÍNIO - GESTÃO DE TENANT:
-------------------------------------

🔧 Activate(string? activatedBy)
   - Ativação de tenant com validações
   - Verificação de configurações obrigatórias
   - Inicialização de recursos padrão
   - Auditoria de ativação

🔧 Deactivate(string? deactivatedBy)
   - Desativação controlada de tenant
   - Preservação de dados para auditoria
   - Notificação para usuários ativos
   - Suspensão de serviços

🔧 MarkAsDeleted(string? deletedBy)
   - Soft delete com retenção de dados
   - Invalidação imediata de acessos
   - Processo de cleanup agendado
   - Compliance com políticas de retenção

MÉTODOS DE DOMÍNIO - ASSINATURA:
-------------------------------

🔧 UpdateSubscription(string plan, DateTime? startDate, DateTime? endDate, string? updatedBy)
   - Atualização de plano de assinatura
   - Validação de transições permitidas
   - Aplicação de novos limites
   - Registro de mudança para billing

🔧 RenewSubscription(DateTime newEndDate, string? renewedBy)
   - Renovação de assinatura existente
   - Manutenção de configurações atuais
   - Reset de contadores de uso
   - Notificação de renovação

🔧 SuspendSubscription(string reason, string? suspendedBy)
   - Suspensão temporária por não-pagamento
   - Manutenção de dados com acesso limitado
   - Processo de cobrança e recuperação
   - Auditoria de suspensão

MÉTODOS DE DOMÍNIO - RECURSOS:
-----------------------------

🔧 UpdateLimits(int? maxUsers, long? maxStorage, int? maxProducts, int? maxApiCalls, string? updatedBy)
   - Atualização de limites de recursos
   - Validação contra uso atual
   - Notificação de mudanças aos usuários
   - Aplicação imediata de controles

🔧 UpdateStorageUsage(long newUsage, string? updatedBy)
   - Atualização de uso de armazenamento
   - Validação contra limites configurados
   - Alertas de aproximação de limite
   - Métricas para billing

🔧 IncrementApiCalls(int count = 1)
   - Incremento de contador de API calls
   - Validação contra limites do plano
   - Rate limiting e throttling
   - Métricas de uso em tempo real

🔧 ResetUsageCounters(string? resetBy)
   - Reset de contadores para novo período
   - Manutenção de histórico para analytics
   - Aplicação de novos limites
   - Processo automatizado mensal

MÉTODOS DE DOMÍNIO - CUSTOMIZAÇÃO:
---------------------------------

🔧 UpdateBranding(string? logoUrl, string? primaryColor, string? secondaryColor, string? updatedBy)
   - Atualização de identidade visual
   - Validação de URLs e cores
   - Aplicação imediata em interfaces
   - Cache invalidation para performance

🔧 UpdateLocalization(string? timeZone, string? language, string? currency, string? dateFormat, string? updatedBy)
   - Configuração de localização
   - Validação de valores permitidos
   - Aplicação para novos usuários
   - Migração de dados existentes

🔧 UpdateCustomSettings(string? settings, string? updatedBy)
   - Configurações personalizadas em JSON
   - Validação de formato e estrutura
   - Aplicação de configurações específicas
   - Extensibilidade para funcionalidades

VALIDAÇÕES DE NEGÓCIO:
---------------------

1. INFORMAÇÕES BÁSICAS:
   ❌ Name obrigatório, 2-100 caracteres
   ❌ Apenas letras, números, espaços e caracteres comerciais
   ❌ DisplayName 2-100 caracteres se fornecido
   ❌ Website deve ser URL válida se fornecida

2. ASSINATURA:
   ❌ SubscriptionPlan deve ser valor válido
   ❌ SubscriptionStatus deve ser enum válido
   ❌ EndDate deve ser posterior a StartDate
   ❌ BillingEmail deve ser email válido

3. LIMITES:
   ❌ Todos os limites devem ser positivos
   ❌ Limites razoáveis para prevenir abuse
   ❌ Uso atual não pode exceder limites
   ❌ Consistência entre limites relacionados

4. BRANDING:
   ❌ URLs devem ser válidas e acessíveis
   ❌ Cores devem ser hexadecimais válidas
   ❌ CustomDomain deve ser domínio válido
   ❌ Logos dentro de limites de tamanho

5. CONFIGURAÇÕES:
   ❌ TimeZone deve ser válido (IANA format)
   ❌ Language deve seguir ISO 639-1
   ❌ Currency deve ser código ISO 4217
   ❌ CustomSettings deve ser JSON válido

CONSTANTES DE VALIDAÇÃO:
-----------------------
📊 MIN_NAME_LENGTH = 2 caracteres
📊 MAX_NAME_LENGTH = 100 caracteres
📊 MAX_DESCRIPTION_LENGTH = 500 caracteres
📊 MAX_URL_LENGTH = 500 caracteres
📊 MAX_COLOR_LENGTH = 7 caracteres (#RRGGBB)
📊 MAX_CUSTOM_SETTINGS_LENGTH = 10000 caracteres
📊 DEFAULT_MAX_USERS = 10
📊 DEFAULT_MAX_STORAGE = 1GB (bytes)
📊 DEFAULT_MAX_PRODUCTS = 1000
📊 DEFAULT_MAX_API_CALLS = 10000

FUNCIONALIDADES DE SEGURANÇA:
-----------------------------
🔒 Isolamento completo de dados por tenant
🔒 Chaves de criptografia únicas por tenant
🔒 Validação de acesso baseada em tenant
🔒 Auditoria de todas as mudanças críticas
🔒 Rate limiting por tenant
🔒 Backup e recovery isolados

PADRÕES ARQUITETURAIS:
---------------------
🏗️ Multi-Tenant Pattern - Isolamento de dados
🏗️ Configuration Pattern - Configurações flexíveis
🏗️ Strategy Pattern - Diferentes tipos de tenant
🏗️ Factory Pattern - Criação de recursos
🏗️ Observer Pattern - Notificações de mudanças
🏗️ Template Method - Validações customizáveis

INTEGRAÇÃO COM SISTEMA:
----------------------
🔗 Tenant Resolver - Identificação de tenant por request
🔗 Database Context - Isolamento de dados
🔗 Billing Service - Cobrança e pagamentos
🔗 Storage Service - Armazenamento isolado
🔗 Email Service - Comunicação com tenant
🔗 Analytics Service - Métricas por tenant

CENÁRIOS DE USO:
---------------
✅ Onboarding de novos clientes
✅ Gestão de assinaturas e billing
✅ Controle de limites e recursos
✅ Customização de interface
✅ Configuração regional
✅ Monitoramento de uso
✅ Suporte técnico e diagnóstico

PERFORMANCE:
-----------
⚡ Cache de configurações por tenant
⚡ Lazy loading de propriedades complexas
⚡ Indexação otimizada para consultas
⚡ Particionamento de dados grandes
⚡ Compressão de dados históricos

MANUTENÇÃO:
----------
🔧 Configurações via JSON para flexibilidade
🔧 Migração de dados simplificada
🔧 Monitoring automático de saúde
🔧 Backup automático por tenant
🔧 Logs estruturados para debugging

CONSIDERAÇÕES DE COMPLIANCE:
---------------------------
⚠️ LGPD/GDPR - Localização de dados
⚠️ SOC2 - Controles de segurança
⚠️ ISO 27001 - Gestão de informações
⚠️ Data Residency - Armazenamento regional
⚠️ Audit Logs - Rastreabilidade completa
⚠️ Encryption - Dados em repouso e trânsito

EXEMPLO DE USO:
--------------
```csharp
// Criação de tenant
var tenant = new Tenant(
    "Empresa XYZ Ltda", 
    "Basic", 
    "admin-user"
);

// Configuração inicial
tenant.UpdateSubscription("Premium", 
    DateTime.Now, DateTime.Now.AddYears(1), "sales");
tenant.UpdateLimits(100, 10_000_000_000, 5000, 100000, "admin");

// Customização
tenant.UpdateBranding(
    "https://cdn.empresa.com/logo.png",
    "#1E3A8A", "#F59E0B", "admin");
tenant.UpdateLocalization(
    "America/Sao_Paulo", "pt-BR", "BRL", "dd/MM/yyyy", "admin");

// Monitoramento
tenant.UpdateStorageUsage(5_000_000_000, "system"); // 5GB
tenant.IncrementApiCalls(100);

// Analytics
var storagePercent = tenant.StorageUsagePercentage;
var isNearLimit = tenant.IsNearUserLimit;
var daysRemaining = tenant.SubscriptionDaysRemaining;
var status = tenant.Status;

// Validações
var canAddUser = tenant.CurrentUsers < tenant.MaxUsers;
var hasActiveSubscription = tenant.IsSubscriptionActive;
```

EVENTOS DE DOMÍNIO (FUTURO):
---------------------------
🔮 TenantCreated - Novo tenant criado
🔮 TenantActivated - Tenant ativado
🔮 SubscriptionUpdated - Assinatura alterada
🔮 LimitsExceeded - Limites ultrapassados
🔮 TenantSuspended - Tenant suspenso
🔮 BrandingUpdated - Identidade visual alterada

MÉTRICAS E ANALYTICS:
--------------------
📊 Taxa de conversão trial → paid
📊 Churn rate por plano
📊 Uso médio de recursos por plano
📊 Tempo de onboarding
📊 Satisfação por tenant
📊 Revenue per tenant

EXTENSÕES FUTURAS:
-----------------
🔮 Multi-Region Support - Tenants distribuídos
🔮 Advanced Analytics - BI integrado
🔮 Marketplace - Apps de terceiros
🔮 White-label - Branding completo
🔮 Federation - SSO avançado
🔮 Compliance Dashboard - Controles automáticos

VERSIONAMENTO:
-------------
📋 Versão: 2.0.0
📋 Última Atualização: 2024
📋 Compatibilidade: .NET 8+
📋 Status: Produção

AUTOR & RESPONSÁVEL:
-------------------
👨‍💻 Desenvolvido por: Equipe AuthTenant
👨‍💻 Mantido por: Time de Platform
📧 Contato: platform@AuthTenant.com

=========================================================
